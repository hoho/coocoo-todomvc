view App
    property todos<collection Todos>
    property main<Node>
    property list<Node>
    property new<Node>
    property toggleAll<Node>
    property footer<Node>
    property stats<view Stats>
    property filter<String>

    property remaining<Number>

    construct
        this set remaining (0)

        this set todos
            +collection Todos create
                add m
                    dom @list append [+view Todo [+view Todo create $m] render]
                    dom @toggleAll attribute "checked" set (false)
                    this set remaining (this.get('remaining') + 1)

                change "completed" m val
                    this set remaining (this.get('remaining') - (val ? 1 : -1))

                remove m
                    choose
                        when [+model Todo $m get completed]
                            this call setStats
                        when $m
                            this set remaining (this.get('remaining') - 1)

        this
            change "remaining" val
                test (val === 0)
                    dom @toggleAll attribute "checked" set (true)

                this call setStats

            change "filter"
                this call setStats

    render
        +template "conkitty:app" apply
            "new" node
                this set new $node

                dom $node
                    keypress e
                        set val [+dom @new value get]

                        test (e.which === 13 && (val = val.trim()))
                            dom @new value set ""
                            collection Todos @todos add $val

            "toggle-all" node
                this set toggleAll $node

                dom $node
                    click
                        set checked [+dom @toggleAll attribute "checked" get]

                        collection Todos @todos each m
                            model Todo $m set completed $checked

            "main" node
                this set main $node

            "list" node
                this set list $node

            "footer" node
                this set footer $node

        routes
            route Active
                this set filter "active"

            route Completed
                this set filter "completed"

            otherwise
                this set filter ""


    method setStats
        this reset stats
            +view Stats create
                "clear-completed"
                    collection Todos @todos each m
                        test [+model Todo $m get completed]
                            model $m destroy

        set total [+collection Todos @todos length] //(this.get('todos').length)
        set completed (total - this.get('remaining'))

        dom @list class remove "active completed"
        dom @list class add @filter

        dom @main class toggle "hidden" (!total)
        dom @footer class toggle "hidden" (!total)

        dom @footer append
            +view Stats @stats render @remaining $completed @filter


view Todo
    property model<model Todo>
    property item<Node>
    property completed<Node>
    property title<Node>
    property edit<Node>

    construct m
        this set model $m

        model Todo $m
            change "title" val
                choose
                    when ((val = val.trim()))
                        dom @edit value set $val
                        dom @title text set $val
                    otherwise
                        model @model destroy

            change "completed" val
                dom @item class toggle "completed" $val
                dom @completed attribute "checked" set $val

            destroy
                this destroy

    render
        +template "conkitty:item" apply
            param
                +model Todo @model get title
            param
                +model Todo @model get completed

            "item" node
                this set item $node

            "completed" node
                this set completed $node

                dom $node
                    click
                        model Todo @model set completed [+dom @completed attribute "checked" get]

            "title" node
                this set title $node

                dom $node
                    dblclick
                        dom @item class add "editing"
                        dom @edit trigger focus

            "edit" node
                this set edit $node

                dom $node
                    blur
                        this call editTitle

                    keypress e
                        test (e.which === 13)
                            dom @edit trigger blur

            "destroy" node
                dom $node
                    click
                        model @model destroy

    method editTitle
        dom @item class remove "editing"
        model Todo @model set title [+dom @edit value get]


view Stats
    render remaining completed filter
        +template "conkitty:stats" apply $remaining $completed $filter
            "clear" node
                dom $node
                    click
                        this trigger "clear-completed"
