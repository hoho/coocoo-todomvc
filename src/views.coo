view App
    @todos<collection Todos>
    @main<dom>
    @list<dom>
    @new<dom>
    @toggleAll<dom>
    @footer<dom>
    @stats<view Stats>
    @filter<String>

    @remaining<Number>

    construct
        set @remaining (0)

        =set @todos
            +collection Todos create
                on add $m
                    ^@list
                        *view Todo render $m
                    dom @toggleAll attribute "checked" set (false)
                    set @remaining (this.get('remaining') + 1)

                on change "completed" $m $val
                    set @remaining (this.get('remaining') - (val ? 1 : -1))

                on remove $m
                    choose
                        when [+model Todo $m get @completed]
                            call setStats
                        when $m
                            set @remaining (this.get('remaining') - 1)

        this
            on change "remaining" $val
                dom @toggleAll attribute "checked" set (val === 0)
                call setStats

            on change "filter"
                call setStats

    ^render
        *template "conkitty:app" apply
            "new" $node
                set @new $node

                dom $node
                    on "keypress" $e
                        set $val [+dom @new value get]

                        test (e.which === 13 && (val = val.trim()))
                            dom @new value set ""
                            collection Todos @todos add $val

            "toggle-all" $node
                set @toggleAll $node

                dom $node
                    on "click"
                        set $checked [+dom @toggleAll attribute "checked" get]

                        collection Todos @todos each $m
                            model Todo $m set @completed $checked

            "main" $node
                set @main $node

            "list" $node
                set @list $node

            "footer" $node
                set @footer $node

        routes
            route Active
                set @filter "active"

            route Completed
                set @filter "completed"

            otherwise
                set @filter ""


    setStats
        =reset @stats
            +view Stats create
                on "clear-completed"
                    collection Todos @todos each $m
                        test [+model Todo $m get @completed]
                            model $m destroy

        set $total [+collection Todos @todos length] //(this.get('todos').length)
        set $completed (total - this.get('remaining'))

        dom @list class remove "active completed"
        dom @list class add @filter

        dom @main class toggle "hidden" (!total)
        dom @footer class toggle "hidden" (!total)

        ^@footer
            *view Stats @stats render @remaining $completed @filter


view Todo
    @model<model Todo>
    @item<dom>
    @completed<dom>
    @title<dom>
    @edit<dom>

    construct $m
        set @model $m

        model Todo $m
            on change "title" $val
                choose
                    when ((val = val.trim()))
                        dom @edit value set $val
                        dom @title text set $val
                    otherwise
                        model @model destroy

            on change "completed" $val
                dom @item class toggle "completed" $val
                dom @completed attribute "checked" set $val

            on destroy
                destroy

    ^render
        *template "conkitty:item" apply
            =param
                +model Todo @model get @title
            =param
                +model Todo @model get @completed

            "item" $node
                set @item $node

            "completed" $node
                set @completed $node

                dom $node
                    on "click"
                        model Todo @model set @completed [+dom @completed attribute "checked" get]

            "title" $node
                set @title $node

                dom $node
                    on "dblclick"
                        dom @item class add "editing"
                        dom @edit trigger "focus"

            "edit" $node
                set @edit $node

                dom $node
                    on "blur"
                        call editTitle

                    on "keypress" $e
                        test (e.which === 13)
                            dom @edit trigger "blur"

            "destroy" $node
                dom $node
                    on "click"
                        model @model destroy

    editTitle
        dom @item class remove "editing"
        model Todo @model set @title [+dom @edit value get]


view Stats
    ^render $remaining $completed $filter
        *template "conkitty:stats" apply $remaining $completed $filter
            "clear" $node
                dom $node
                    on "click"
                        trigger "clear-completed"
